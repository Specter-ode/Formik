{"version":3,"file":"static/js/514.11f1201b.chunk.js","mappings":"iJACA,MAAwB,wB,oBCDhBA,EAAuBC,EAAQ,MAA/BD,mBAsBR,MApBME,WAGJ,cAAe,oBAFfC,MAAQ,EAEM,KADdC,MAAQ,GAENJ,EAAmBK,MAapB,OAZA,2BAED,WACEA,KAAKF,MAAQE,KAAKF,MAAQ,EAC1BG,QAAQC,IAAI,QAASF,KAAKF,SAC3B,iBACD,WACEE,KAAKF,MAAQE,KAAKF,MAAQ,EAC1BG,QAAQC,IAAI,QAASF,KAAKF,SAC3B,iBACD,WACE,MAAO,YAAcE,KAAKF,MAAQE,KAAKD,WACxC,EAjBGF,I,oBCFEF,EAAgDC,EAAQ,MAAxDD,mBAEFQ,EAAAA,WAMJ,cAAe,oBALfC,MAAQ,CACN,CAAEC,GAAI,EAAGC,MAAO,4DAAgBC,WAAW,GAC3C,CAAEF,GAAI,EAAGC,MAAO,4DAAgBC,WAAW,GAC3C,CAAEF,GAAI,EAAGC,MAAO,4DAAgBC,WAAW,IAG3CZ,EACEK,MA8BH,OArBA,+BACD,SAAQQ,GACNR,KAAKI,MAAMK,KAAKD,KACjB,wBACD,SAAWH,GACTL,KAAKI,MAAQJ,KAAKI,MAAMM,QAAO,SAAAF,GAAI,OAAIA,EAAKH,KAAOA,OACpD,0BACD,SAAaA,GACXL,KAAKI,MAAQJ,KAAKI,MAAMO,KAAI,SAAAH,GAAI,OAC9BA,EAAKH,KAAOA,GAAZ,kBAAsBG,GAAtB,IAA4BD,WAAYC,EAAKD,YAAcC,OAE9D,wBACD,WAAc,IAAD,OACXP,QAAQC,IAAI,gBACZU,MAAM,gDACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACJd,QAAQC,IAAI,SAAUa,GACtBd,QAAQC,IAAI,UAAW,EAAKE,OAC5B,EAAKA,MAAL,kBAAiB,EAAKA,OAAtB,CAA6BW,WAElC,EAtCGZ,GAyCN,MAAmBA,E,iBCDnB,GAtCiBa,EAAAA,EAAAA,KAAS,WACxBf,QAAQC,IAAI,kBAAmBe,EAAQnB,OAEvC,IAAMoB,EAAWV,EAAKJ,MAAMO,KAAI,SAAAQ,GAAE,OAChC,2BACE,8BACE,kBACEC,KAAK,WACLC,MAAOF,EAAGZ,UACVe,QAASH,EAAGZ,UACZgB,SAAU,kBAAMf,EAAKgB,aAAaL,EAAGd,OAEtCc,EAAGb,UAEN,mBAAQc,KAAK,SAASK,QAAS,kBAAMjB,EAAKkB,WAAWP,EAAGd,KAAxD,0DAVOc,EAAGd,OAed,OACE,6BACE,eAAIsB,UAAWC,EAAf,uBACA,iBAAKD,UAAWC,EAAhB,WACE,mBAAQH,QAAS,kBAAMR,EAAQY,OAA/B,gBACA,0BAAO,mCAAYZ,EAAQnB,SAC3B,mBAAQ2B,QAAS,kBAAMR,EAAQa,OAA/B,mBAEF,iBAAKH,UAAWC,EAAhB,UACGV,EACAD,EAAQc,UAEX,mBAAQX,KAAK,SAASK,QAAS,kBAAMjB,EAAKwB,cAA1C","sources":["webpack://Formik/./src/pages/MobxPage/MobxPage.module.css?aff1","mobx/store/counter.js","mobx/store/todo.js","pages/MobxPage/MobxPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"MobxPage_title__N9bW-\"};","const { makeAutoObservable } = require('mobx');\n\nclass Counter {\n  count = 0;\n  timer = 50;\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  inc() {\n    this.count = this.count + 1;\n    console.log('inc: ', this.count);\n  }\n  dec() {\n    this.count = this.count - 1;\n    console.log('dec: ', this.count);\n  }\n  get total() {\n    return 'total = ' + (this.count + this.timer);\n  }\n}\n\nexport default new Counter();\n","const { makeAutoObservable /* observable, action */ } = require('mobx');\n\nclass Todo {\n  todos = [\n    { id: 1, title: 'тест номер 1', completed: false },\n    { id: 2, title: 'тест номер 2', completed: false },\n    { id: 3, title: 'тест номер 3', completed: false },\n  ];\n  constructor() {\n    makeAutoObservable(\n      this\n      //   {\n      //     todos: observable,\n      //     addTodo: action,\n      //     removeTodo: action,\n      //     completeTodo: action,\n      //   },\n      //   { deep: true }\n    );\n  }\n  addTodo(todo) {\n    this.todos.push(todo);\n  }\n  removeTodo(id) {\n    this.todos = this.todos.filter(todo => todo.id !== id);\n  }\n  completeTodo(id) {\n    this.todos = this.todos.map(todo =>\n      todo.id === id ? { ...todo, completed: !todo.completed } : todo\n    );\n  }\n  fetchTodos() {\n    console.log('fetchTodos: ');\n    fetch('https://jsonplaceholder.typicode.com/todos/1')\n      .then(res => res.json())\n      .then(json => {\n        console.log('json: ', json);\n        console.log('todos: ', this.todos);\n        this.todos = [...this.todos, json];\n      });\n  }\n}\n\nexport default new Todo();\n","import s from './MobxPage.module.css';\nimport counter from 'mobx/store/counter';\nimport todo from 'mobx/store/todo';\nimport { observer } from 'mobx-react-lite';\nconst MobxPage = observer(() => {\n  console.log('counter.count: ', counter.count);\n\n  const elements = todo.todos.map(el => (\n    <li key={el.id}>\n      <label>\n        <input\n          type=\"checkbox\"\n          value={el.completed}\n          checked={el.completed}\n          onChange={() => todo.completeTodo(el.id)}\n        />\n        {el.title}\n      </label>\n      <button type=\"button\" onClick={() => todo.removeTodo(el.id)}>\n        Удалить\n      </button>\n    </li>\n  ));\n  return (\n    <main>\n      <h3 className={s.title}>Welcome </h3>\n      <div className={s.title}>\n        <button onClick={() => counter.inc()}>+</button>\n        <span>{'Сумма =' + counter.count}</span>\n        <button onClick={() => counter.dec()}>-</button>\n      </div>\n      <div className={s.title}>\n        {elements}\n        {counter.total}\n      </div>\n      <button type=\"button\" onClick={() => todo.fetchTodos()}>\n        Запрос\n      </button>\n    </main>\n  );\n});\n\nexport default MobxPage;\n"],"names":["makeAutoObservable","require","Counter","count","timer","this","console","log","Todo","todos","id","title","completed","todo","push","filter","map","fetch","then","res","json","observer","counter","elements","el","type","value","checked","onChange","completeTodo","onClick","removeTodo","className","s","inc","dec","total","fetchTodos"],"sourceRoot":""}